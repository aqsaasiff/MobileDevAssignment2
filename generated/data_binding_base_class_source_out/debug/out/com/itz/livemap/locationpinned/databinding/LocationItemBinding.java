// Generated by view binder compiler. Do not edit!
package com.itz.livemap.locationpinned.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.itz.livemap.locationpinned.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LocationItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView address;

  @NonNull
  public final ImageView deleteButton;

  @NonNull
  public final TextView longi;

  @NonNull
  public final TextView loti;

  @NonNull
  public final RelativeLayout mainContainer;

  private LocationItemBinding(@NonNull CardView rootView, @NonNull TextView address,
      @NonNull ImageView deleteButton, @NonNull TextView longi, @NonNull TextView loti,
      @NonNull RelativeLayout mainContainer) {
    this.rootView = rootView;
    this.address = address;
    this.deleteButton = deleteButton;
    this.longi = longi;
    this.loti = loti;
    this.mainContainer = mainContainer;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static LocationItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LocationItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.location_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LocationItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.address;
      TextView address = ViewBindings.findChildViewById(rootView, id);
      if (address == null) {
        break missingId;
      }

      id = R.id.deleteButton;
      ImageView deleteButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteButton == null) {
        break missingId;
      }

      id = R.id.longi;
      TextView longi = ViewBindings.findChildViewById(rootView, id);
      if (longi == null) {
        break missingId;
      }

      id = R.id.loti;
      TextView loti = ViewBindings.findChildViewById(rootView, id);
      if (loti == null) {
        break missingId;
      }

      id = R.id.mainContainer;
      RelativeLayout mainContainer = ViewBindings.findChildViewById(rootView, id);
      if (mainContainer == null) {
        break missingId;
      }

      return new LocationItemBinding((CardView) rootView, address, deleteButton, longi, loti,
          mainContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
